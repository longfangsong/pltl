enterR -> X enterR & X(X enterR) & X(X(X enterR)) & X(X(X(X enterR))) & X(X(X(X(X enterR)))) & X(X(X(X(X(X enterR))))) & X(X(X(X(X(X(X enterR)))))) & X(X(X(X(X(X(X(X enterR))))))) & X(X(X(X(X(X(X(X(X enterR))))))))
enterR -> X(X(X(X(enterI | ¬(X(enterI) & X(X(enterI))) ))))
enterI -> Y(Y(Y(Y(enterR & ¬(Y(¬enterI) & Y(Y(¬enterI))) ))))
inR <-> (enterR & ¬(Y(¬enterI) & Y(Y(¬enterR))) & (¬enterI S enterR) )
(Y closed & goUp) -> (mvUp & X(mvUp) & X(X( (open U goDown) | G(open) )))
(H(¬goDown) & ¬goDown) -> open
goDown <-> Y(Y(enterR))
goUp <-> exitI
G(commit -> ¬(O(abort)))
G(start -> (F(commit | abort) & (abort -> O(conflict))))
G(acquire -> (F(inCS & F(release)) & (inCS -> ¬release S acquire ) ))
G(ernterCS -> Y(¬mutex))
G(grant -> O(request & (¬cancel S request)))
G((pressureHigh S sysCheck) -> alert)
G(O(sendAttempt & ¬ack) -> F(retransmit))
(alert -> F(writeLog)) & (writeLog -> (alert S alertEvent))
G(pDecide -> O(anyPropose))
F(G(read ->( (¬writeConflicting) S writeStable )))
G(readV & Y(readV2) -> vGEV2)
G(moveForward -> H(¬collision))
G(F(¬r0 ~S g0)) & G(g0 -> (r0 | Y(r0 B ¬g0)))
¬(g0 & g1) & ¬(g1 & g0) & G(F(¬r0 ~S g0)) & G(F(¬r1 ~S g1)) & G(g0 -> (r0 | Y(r0 B ¬g0))) & G(g1 -> (r1 | Y(r1 B ¬g1)))
¬(g0 & g1) & ¬(g0 & g2) & ¬(g1 & g0) & ¬(g1 & g2) & ¬(g2 & g0) & ¬(g2 & g1) & G(F(¬r0 ~S g0)) & G(F(¬r1 ~S g1)) & G(F(¬r2 ~S g2)) & G(g0 -> (r0 | Y(r0 B ¬g0))) & G(g1 -> (r1 | Y(r1 B ¬g1))) & G(g2 -> (r2 | Y(r2 B ¬g2)))
