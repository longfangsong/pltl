enterR -> X enterR & X(X enterR) & X(X(X enterR)) & X(X(X(X enterR))) & X(X(X(X(X enterR)))) & X(X(X(X(X(X enterR))))) & X(X(X(X(X(X(X enterR)))))) & X(X(X(X(X(X(X(X enterR))))))) & X(X(X(X(X(X(X(X(X enterR))))))))
enterR -> X(X(X(X(enterI | \!(X(enterI) & X(X(enterI))) ))))
enterI -> Y(Y(Y(Y(enterR & \!(Y(\!enterI) & Y(Y(\!enterI))) ))))
inR <-> (enterR & \!(Y(\!enterI) & Y(Y(\!enterR)) ) & (\!enterI S enterR) )
(Y closed & goUp) -> (mvUp & X(mvUp) & X(X( (open U goDown) | G(open) )))
(\!(1 S goDown) & \!goDown) -> open
goDown <-> Y(Y(enterR))
goUp <-> exitI
G(commit -> \!(1 S abort))
G(start -> (F(commit | abort) & (abort -> (1 S conflict))))
G(acquire -> (F(inCS & F(release)) & (inCS -> \!release S acquire ) ))
G(ernterCS -> Y(\!mutex))
G(grant -> (1 S (request & (\!cancel S request))))
G((pressureHigh S sysCheck) -> alert)
G((1 S (sendAttempt & \!ack)) -> F(retransmit))
(alert -> F(writeLog)) & (writeLog -> (alert S alertEvent))
G(pDecide -> (1 S anyPropose))
F(G(read ->( (\!writeConflicting) S writeStable )))
G(readV & Y(readV2) -> vGEV2)
G(moveForward -> H(\!collision))
G(F(\!r0 Z g0)) & G(g0 -> (r0 | Y(\!g0 S (r0 & \!g0))))
\!(g0 & g1) & \!(g1 & g0) & G(F(\!r0 S g0)) & G(F(\!r1 S g1)) & G(g0 -> (r0 | Y(\!g0 S (r0 & \!g0)))) & G(g1 -> (r1 | Y(\!g1 & (r1 & \!g1))))
